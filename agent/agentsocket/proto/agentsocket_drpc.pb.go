// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.34
// source: agent/agentsocket/proto/agentsocket.proto

package proto

import (
	context "context"
	errors "errors"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto struct{}

func (drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto) MarshalAppend(buf []byte, msg drpc.Message) ([]byte, error) {
	return proto.MarshalOptions{}.MarshalAppend(buf, msg.(proto.Message))
}

func (drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return protojson.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return protojson.Unmarshal(buf, msg.(proto.Message))
}

type DRPCAgentSocketClient interface {
	DRPCConn() drpc.Conn

	Ping(ctx context.Context, in *PingRequest) (*PingResponse, error)
	SyncStart(ctx context.Context, in *SyncStartRequest) (*SyncStartResponse, error)
	SyncWant(ctx context.Context, in *SyncWantRequest) (*SyncWantResponse, error)
	SyncComplete(ctx context.Context, in *SyncCompleteRequest) (*SyncCompleteResponse, error)
	SyncReady(ctx context.Context, in *SyncReadyRequest) (*SyncReadyResponse, error)
	SyncStatus(ctx context.Context, in *SyncStatusRequest) (*SyncStatusResponse, error)
}

type drpcAgentSocketClient struct {
	cc drpc.Conn
}

func NewDRPCAgentSocketClient(cc drpc.Conn) DRPCAgentSocketClient {
	return &drpcAgentSocketClient{cc}
}

func (c *drpcAgentSocketClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcAgentSocketClient) Ping(ctx context.Context, in *PingRequest) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/coder.agentsocket.v1.AgentSocket/Ping", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcAgentSocketClient) SyncStart(ctx context.Context, in *SyncStartRequest) (*SyncStartResponse, error) {
	out := new(SyncStartResponse)
	err := c.cc.Invoke(ctx, "/coder.agentsocket.v1.AgentSocket/SyncStart", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcAgentSocketClient) SyncWant(ctx context.Context, in *SyncWantRequest) (*SyncWantResponse, error) {
	out := new(SyncWantResponse)
	err := c.cc.Invoke(ctx, "/coder.agentsocket.v1.AgentSocket/SyncWant", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcAgentSocketClient) SyncComplete(ctx context.Context, in *SyncCompleteRequest) (*SyncCompleteResponse, error) {
	out := new(SyncCompleteResponse)
	err := c.cc.Invoke(ctx, "/coder.agentsocket.v1.AgentSocket/SyncComplete", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcAgentSocketClient) SyncReady(ctx context.Context, in *SyncReadyRequest) (*SyncReadyResponse, error) {
	out := new(SyncReadyResponse)
	err := c.cc.Invoke(ctx, "/coder.agentsocket.v1.AgentSocket/SyncReady", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcAgentSocketClient) SyncStatus(ctx context.Context, in *SyncStatusRequest) (*SyncStatusResponse, error) {
	out := new(SyncStatusResponse)
	err := c.cc.Invoke(ctx, "/coder.agentsocket.v1.AgentSocket/SyncStatus", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCAgentSocketServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	SyncStart(context.Context, *SyncStartRequest) (*SyncStartResponse, error)
	SyncWant(context.Context, *SyncWantRequest) (*SyncWantResponse, error)
	SyncComplete(context.Context, *SyncCompleteRequest) (*SyncCompleteResponse, error)
	SyncReady(context.Context, *SyncReadyRequest) (*SyncReadyResponse, error)
	SyncStatus(context.Context, *SyncStatusRequest) (*SyncStatusResponse, error)
}

type DRPCAgentSocketUnimplementedServer struct{}

func (s *DRPCAgentSocketUnimplementedServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCAgentSocketUnimplementedServer) SyncStart(context.Context, *SyncStartRequest) (*SyncStartResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCAgentSocketUnimplementedServer) SyncWant(context.Context, *SyncWantRequest) (*SyncWantResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCAgentSocketUnimplementedServer) SyncComplete(context.Context, *SyncCompleteRequest) (*SyncCompleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCAgentSocketUnimplementedServer) SyncReady(context.Context, *SyncReadyRequest) (*SyncReadyResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCAgentSocketUnimplementedServer) SyncStatus(context.Context, *SyncStatusRequest) (*SyncStatusResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCAgentSocketDescription struct{}

func (DRPCAgentSocketDescription) NumMethods() int { return 6 }

func (DRPCAgentSocketDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/coder.agentsocket.v1.AgentSocket/Ping", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAgentSocketServer).
					Ping(
						ctx,
						in1.(*PingRequest),
					)
			}, DRPCAgentSocketServer.Ping, true
	case 1:
		return "/coder.agentsocket.v1.AgentSocket/SyncStart", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAgentSocketServer).
					SyncStart(
						ctx,
						in1.(*SyncStartRequest),
					)
			}, DRPCAgentSocketServer.SyncStart, true
	case 2:
		return "/coder.agentsocket.v1.AgentSocket/SyncWant", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAgentSocketServer).
					SyncWant(
						ctx,
						in1.(*SyncWantRequest),
					)
			}, DRPCAgentSocketServer.SyncWant, true
	case 3:
		return "/coder.agentsocket.v1.AgentSocket/SyncComplete", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAgentSocketServer).
					SyncComplete(
						ctx,
						in1.(*SyncCompleteRequest),
					)
			}, DRPCAgentSocketServer.SyncComplete, true
	case 4:
		return "/coder.agentsocket.v1.AgentSocket/SyncReady", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAgentSocketServer).
					SyncReady(
						ctx,
						in1.(*SyncReadyRequest),
					)
			}, DRPCAgentSocketServer.SyncReady, true
	case 5:
		return "/coder.agentsocket.v1.AgentSocket/SyncStatus", drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAgentSocketServer).
					SyncStatus(
						ctx,
						in1.(*SyncStatusRequest),
					)
			}, DRPCAgentSocketServer.SyncStatus, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterAgentSocket(mux drpc.Mux, impl DRPCAgentSocketServer) error {
	return mux.Register(impl, DRPCAgentSocketDescription{})
}

type DRPCAgentSocket_PingStream interface {
	drpc.Stream
	SendAndClose(*PingResponse) error
}

type drpcAgentSocket_PingStream struct {
	drpc.Stream
}

func (x *drpcAgentSocket_PingStream) SendAndClose(m *PingResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCAgentSocket_SyncStartStream interface {
	drpc.Stream
	SendAndClose(*SyncStartResponse) error
}

type drpcAgentSocket_SyncStartStream struct {
	drpc.Stream
}

func (x *drpcAgentSocket_SyncStartStream) SendAndClose(m *SyncStartResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCAgentSocket_SyncWantStream interface {
	drpc.Stream
	SendAndClose(*SyncWantResponse) error
}

type drpcAgentSocket_SyncWantStream struct {
	drpc.Stream
}

func (x *drpcAgentSocket_SyncWantStream) SendAndClose(m *SyncWantResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCAgentSocket_SyncCompleteStream interface {
	drpc.Stream
	SendAndClose(*SyncCompleteResponse) error
}

type drpcAgentSocket_SyncCompleteStream struct {
	drpc.Stream
}

func (x *drpcAgentSocket_SyncCompleteStream) SendAndClose(m *SyncCompleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCAgentSocket_SyncReadyStream interface {
	drpc.Stream
	SendAndClose(*SyncReadyResponse) error
}

type drpcAgentSocket_SyncReadyStream struct {
	drpc.Stream
}

func (x *drpcAgentSocket_SyncReadyStream) SendAndClose(m *SyncReadyResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCAgentSocket_SyncStatusStream interface {
	drpc.Stream
	SendAndClose(*SyncStatusResponse) error
}

type drpcAgentSocket_SyncStatusStream struct {
	drpc.Stream
}

func (x *drpcAgentSocket_SyncStatusStream) SendAndClose(m *SyncStatusResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_agent_agentsocket_proto_agentsocket_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
