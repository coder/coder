// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coder/coder/v2/agent (interfaces: ContainerLister)
//
// Generated by this command:
//
//	mockgen -destination ./containers_mock.go -package agent . ContainerLister
//

// Package agent is a generated GoMock package.
package agent

import (
	context "context"
	reflect "reflect"

	codersdk "github.com/coder/coder/v2/codersdk"
	gomock "go.uber.org/mock/gomock"
)

// MockContainerLister is a mock of ContainerLister interface.
type MockContainerLister struct {
	ctrl     *gomock.Controller
	recorder *MockContainerListerMockRecorder
	isgomock struct{}
}

// MockContainerListerMockRecorder is the mock recorder for MockContainerLister.
type MockContainerListerMockRecorder struct {
	mock *MockContainerLister
}

// NewMockContainerLister creates a new mock instance.
func NewMockContainerLister(ctrl *gomock.Controller) *MockContainerLister {
	mock := &MockContainerLister{ctrl: ctrl}
	mock.recorder = &MockContainerListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContainerLister) EXPECT() *MockContainerListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockContainerLister) List(ctx context.Context) (codersdk.WorkspaceAgentListContainersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].(codersdk.WorkspaceAgentListContainersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockContainerListerMockRecorder) List(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockContainerLister)(nil).List), ctx)
}
