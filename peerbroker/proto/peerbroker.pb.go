// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: peerbroker/proto/peerbroker.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebRTCSessionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpType int32  `protobuf:"varint,1,opt,name=sdp_type,json=sdpType,proto3" json:"sdp_type,omitempty"`
	Sdp     string `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
}

func (x *WebRTCSessionDescription) Reset() {
	*x = WebRTCSessionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRTCSessionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRTCSessionDescription) ProtoMessage() {}

func (x *WebRTCSessionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRTCSessionDescription.ProtoReflect.Descriptor instead.
func (*WebRTCSessionDescription) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{0}
}

func (x *WebRTCSessionDescription) GetSdpType() int32 {
	if x != nil {
		return x.SdpType
	}
	return 0
}

func (x *WebRTCSessionDescription) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

type WebRTCICEServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls           []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	Username       string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Credential     string   `protobuf:"bytes,3,opt,name=credential,proto3" json:"credential,omitempty"`
	CredentialType int32    `protobuf:"varint,4,opt,name=credential_type,json=credentialType,proto3" json:"credential_type,omitempty"`
}

func (x *WebRTCICEServer) Reset() {
	*x = WebRTCICEServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRTCICEServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRTCICEServer) ProtoMessage() {}

func (x *WebRTCICEServer) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRTCICEServer.ProtoReflect.Descriptor instead.
func (*WebRTCICEServer) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{1}
}

func (x *WebRTCICEServer) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *WebRTCICEServer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WebRTCICEServer) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *WebRTCICEServer) GetCredentialType() int32 {
	if x != nil {
		return x.CredentialType
	}
	return 0
}

type WebRTCICEServers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*WebRTCICEServer `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *WebRTCICEServers) Reset() {
	*x = WebRTCICEServers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRTCICEServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRTCICEServers) ProtoMessage() {}

func (x *WebRTCICEServers) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRTCICEServers.ProtoReflect.Descriptor instead.
func (*WebRTCICEServers) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{2}
}

func (x *WebRTCICEServers) GetServers() []*WebRTCICEServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type Negotiation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionDescription *WebRTCSessionDescription `protobuf:"bytes,1,opt,name=session_description,json=sessionDescription,proto3" json:"session_description,omitempty"`
	IceCandidates      []string                  `protobuf:"bytes,2,rep,name=ice_candidates,json=iceCandidates,proto3" json:"ice_candidates,omitempty"`
}

func (x *Negotiation) Reset() {
	*x = Negotiation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Negotiation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Negotiation) ProtoMessage() {}

func (x *Negotiation) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Negotiation.ProtoReflect.Descriptor instead.
func (*Negotiation) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{3}
}

func (x *Negotiation) GetSessionDescription() *WebRTCSessionDescription {
	if x != nil {
		return x.SessionDescription
	}
	return nil
}

func (x *Negotiation) GetIceCandidates() []string {
	if x != nil {
		return x.IceCandidates
	}
	return nil
}

type NegotiateConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NegotiateConnection) Reset() {
	*x = NegotiateConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateConnection) ProtoMessage() {}

func (x *NegotiateConnection) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateConnection.ProtoReflect.Descriptor instead.
func (*NegotiateConnection) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{4}
}

type NegotiateConnection_ClientToServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*NegotiateConnection_ClientToServer_Servers
	//	*NegotiateConnection_ClientToServer_Negotiation
	Message isNegotiateConnection_ClientToServer_Message `protobuf_oneof:"message"`
}

func (x *NegotiateConnection_ClientToServer) Reset() {
	*x = NegotiateConnection_ClientToServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateConnection_ClientToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateConnection_ClientToServer) ProtoMessage() {}

func (x *NegotiateConnection_ClientToServer) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateConnection_ClientToServer.ProtoReflect.Descriptor instead.
func (*NegotiateConnection_ClientToServer) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{4, 0}
}

func (m *NegotiateConnection_ClientToServer) GetMessage() isNegotiateConnection_ClientToServer_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *NegotiateConnection_ClientToServer) GetServers() *WebRTCICEServers {
	if x, ok := x.GetMessage().(*NegotiateConnection_ClientToServer_Servers); ok {
		return x.Servers
	}
	return nil
}

func (x *NegotiateConnection_ClientToServer) GetNegotiation() *Negotiation {
	if x, ok := x.GetMessage().(*NegotiateConnection_ClientToServer_Negotiation); ok {
		return x.Negotiation
	}
	return nil
}

type isNegotiateConnection_ClientToServer_Message interface {
	isNegotiateConnection_ClientToServer_Message()
}

type NegotiateConnection_ClientToServer_Servers struct {
	Servers *WebRTCICEServers `protobuf:"bytes,1,opt,name=servers,proto3,oneof"`
}

type NegotiateConnection_ClientToServer_Negotiation struct {
	Negotiation *Negotiation `protobuf:"bytes,2,opt,name=negotiation,proto3,oneof"`
}

func (*NegotiateConnection_ClientToServer_Servers) isNegotiateConnection_ClientToServer_Message() {}

func (*NegotiateConnection_ClientToServer_Negotiation) isNegotiateConnection_ClientToServer_Message() {
}

type NegotiateConnection_ServerToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Negotiation *Negotiation `protobuf:"bytes,1,opt,name=negotiation,proto3" json:"negotiation,omitempty"`
}

func (x *NegotiateConnection_ServerToClient) Reset() {
	*x = NegotiateConnection_ServerToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateConnection_ServerToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateConnection_ServerToClient) ProtoMessage() {}

func (x *NegotiateConnection_ServerToClient) ProtoReflect() protoreflect.Message {
	mi := &file_peerbroker_proto_peerbroker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateConnection_ServerToClient.ProtoReflect.Descriptor instead.
func (*NegotiateConnection_ServerToClient) Descriptor() ([]byte, []int) {
	return file_peerbroker_proto_peerbroker_proto_rawDescGZIP(), []int{4, 1}
}

func (x *NegotiateConnection_ServerToClient) GetNegotiation() *Negotiation {
	if x != nil {
		return x.Negotiation
	}
	return nil
}

var File_peerbroker_proto_peerbroker_proto protoreflect.FileDescriptor

var file_peerbroker_proto_peerbroker_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x22,
	0x47, 0x0a, 0x18, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x64, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x57, 0x65, 0x62,
	0x52, 0x54, 0x43, 0x49, 0x43, 0x45, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x49,
	0x43, 0x45, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x65, 0x65,
	0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x49, 0x43,
	0x45, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x55, 0x0a, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54,
	0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x63, 0x65, 0x5f, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xf7,
	0x01, 0x0a, 0x13, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x92, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x65, 0x65,
	0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x49, 0x43,
	0x45, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x4b, 0x0a, 0x0e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x0b, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6e, 0x65, 0x67,
	0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x87, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x65,
	0x72, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x79, 0x0a, 0x13, 0x4e, 0x65, 0x67, 0x6f, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x2e, 0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x67, 0x6f,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x2e,
	0x2e, 0x70, 0x65, 0x65, 0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x67, 0x6f,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x65, 0x65,
	0x72, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_peerbroker_proto_peerbroker_proto_rawDescOnce sync.Once
	file_peerbroker_proto_peerbroker_proto_rawDescData = file_peerbroker_proto_peerbroker_proto_rawDesc
)

func file_peerbroker_proto_peerbroker_proto_rawDescGZIP() []byte {
	file_peerbroker_proto_peerbroker_proto_rawDescOnce.Do(func() {
		file_peerbroker_proto_peerbroker_proto_rawDescData = protoimpl.X.CompressGZIP(file_peerbroker_proto_peerbroker_proto_rawDescData)
	})
	return file_peerbroker_proto_peerbroker_proto_rawDescData
}

var file_peerbroker_proto_peerbroker_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_peerbroker_proto_peerbroker_proto_goTypes = []interface{}{
	(*WebRTCSessionDescription)(nil),           // 0: peerbroker.WebRTCSessionDescription
	(*WebRTCICEServer)(nil),                    // 1: peerbroker.WebRTCICEServer
	(*WebRTCICEServers)(nil),                   // 2: peerbroker.WebRTCICEServers
	(*Negotiation)(nil),                        // 3: peerbroker.Negotiation
	(*NegotiateConnection)(nil),                // 4: peerbroker.NegotiateConnection
	(*NegotiateConnection_ClientToServer)(nil), // 5: peerbroker.NegotiateConnection.ClientToServer
	(*NegotiateConnection_ServerToClient)(nil), // 6: peerbroker.NegotiateConnection.ServerToClient
}
var file_peerbroker_proto_peerbroker_proto_depIdxs = []int32{
	1, // 0: peerbroker.WebRTCICEServers.servers:type_name -> peerbroker.WebRTCICEServer
	0, // 1: peerbroker.Negotiation.session_description:type_name -> peerbroker.WebRTCSessionDescription
	2, // 2: peerbroker.NegotiateConnection.ClientToServer.servers:type_name -> peerbroker.WebRTCICEServers
	3, // 3: peerbroker.NegotiateConnection.ClientToServer.negotiation:type_name -> peerbroker.Negotiation
	3, // 4: peerbroker.NegotiateConnection.ServerToClient.negotiation:type_name -> peerbroker.Negotiation
	5, // 5: peerbroker.PeerBroker.NegotiateConnection:input_type -> peerbroker.NegotiateConnection.ClientToServer
	6, // 6: peerbroker.PeerBroker.NegotiateConnection:output_type -> peerbroker.NegotiateConnection.ServerToClient
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_peerbroker_proto_peerbroker_proto_init() }
func file_peerbroker_proto_peerbroker_proto_init() {
	if File_peerbroker_proto_peerbroker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_peerbroker_proto_peerbroker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRTCSessionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peerbroker_proto_peerbroker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRTCICEServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peerbroker_proto_peerbroker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRTCICEServers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peerbroker_proto_peerbroker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Negotiation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peerbroker_proto_peerbroker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peerbroker_proto_peerbroker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateConnection_ClientToServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peerbroker_proto_peerbroker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateConnection_ServerToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_peerbroker_proto_peerbroker_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*NegotiateConnection_ClientToServer_Servers)(nil),
		(*NegotiateConnection_ClientToServer_Negotiation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_peerbroker_proto_peerbroker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_peerbroker_proto_peerbroker_proto_goTypes,
		DependencyIndexes: file_peerbroker_proto_peerbroker_proto_depIdxs,
		MessageInfos:      file_peerbroker_proto_peerbroker_proto_msgTypes,
	}.Build()
	File_peerbroker_proto_peerbroker_proto = out.File
	file_peerbroker_proto_peerbroker_proto_rawDesc = nil
	file_peerbroker_proto_peerbroker_proto_goTypes = nil
	file_peerbroker_proto_peerbroker_proto_depIdxs = nil
}
