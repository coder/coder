// Code generated by rbacgen/main.go. DO NOT EDIT.
package rbac

import "github.com/coder/coder/v2/coderd/rbac/policy"

// Objecter returns the RBAC object for itself.
type Objecter interface {
	RBACObject() Object
}

var (
	{{- range $element := . }}
		{{- $Name := pascalCaseName $element.FunctionName }}
		// Resource{{ $Name }}
		// Valid Actions
		{{- range $action, $value := .Actions }}
		//  - "{{ $action }}" needs [{{ $value.Requires }}] :: {{ $value.Description }}
		{{- end }}
		Resource{{ $Name }} = {{ $Name }}Object {
			Object: Object{
				Type: "{{ $element.Type }}",
			},
		}
	{{ end -}}
)

func AllResources() []Objecter {
	return []Objecter{
	{{- range $element := . }}
		Resource{{ pascalCaseName $element.FunctionName }},
	{{- end }}
	}
}

{{- range $element := . }}
	{{- $Name := pascalCaseName $element.FunctionName }}
	type {{ $Name }}Object struct{ Object }
	{{- range $action, $value := .Actions -}}
	{{ $ActionEnum := actionEnum $action }}
	func ({{ $Name }}Object ) {{ $ActionEnum }}() policy.Action { return policy.{{ $ActionEnum }} }
	{{- end }}
{{ end -}}
