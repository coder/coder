syntax = "proto3";
option go_package = "github.com/coder/coder/v2/aibridged/proto";

package aibridged;

message AuditPromptRequest {
	string prompt = 1;
	string provider = 2;
}

message AuditPromptResponse {}

message TrackTokenUsageRequest {
	string msg_id = 1;
	int64 input_tokens = 2;
	int64 output_tokens = 3;
  string model = 4;
  map<string, int64> other = 5;
}
message TrackTokenUsageResponse {}

message TrackUserPromptsRequest {
	string prompt = 1;
  string model = 2;
}
message TrackUserPromptsResponse {}

message TrackToolUseRequest {
	string tool = 1;
  string model = 2;
  map<string, string> input = 3;
}
message TrackToolUseResponse {}

// AIBridgeDaemon describes the service exposed by coderd, which allows the AI bridge to send data to coderd.
service AIBridgeDaemon {

	// TODO: expand to full auditing; this is just a toy implementation for the moment.
	// AuditPrompt allows aibridged to report back to coderd that a prompt was issued by a user to an AI provider.
	rpc AuditPrompt(AuditPromptRequest) returns (AuditPromptResponse);
	rpc TrackTokenUsage(TrackTokenUsageRequest) returns (TrackTokenUsageResponse);
	rpc TrackUserPrompts(TrackUserPromptsRequest) returns (TrackUserPromptsResponse);
	rpc TrackToolUse(TrackToolUseRequest) returns (TrackToolUseResponse);
}
