Usage: coder scaletest workspace-traffic [flags]

Generate traffic to scaletest workspaces through coderd

[1mOptions[0m
      --bytes-per-tick int, $CODER_SCALETEST_WORKSPACE_TRAFFIC_BYTES_PER_TICK (default: 1024)
          How much traffic to generate per tick.

      --cleanup-concurrency int, $CODER_SCALETEST_CLEANUP_CONCURRENCY (default: 1)
          Number of concurrent cleanup jobs to run. 0 means unlimited.

      --cleanup-job-timeout duration, $CODER_SCALETEST_CLEANUP_JOB_TIMEOUT (default: 5m)
          Timeout per job. Jobs may take longer to complete under higher
          concurrency limits.

      --cleanup-timeout duration, $CODER_SCALETEST_CLEANUP_TIMEOUT (default: 30m)
          Timeout for the entire cleanup run. 0 means unlimited.

      --concurrency int, $CODER_SCALETEST_CONCURRENCY (default: 1)
          Number of concurrent jobs to run. 0 means unlimited.

      --job-timeout duration, $CODER_SCALETEST_JOB_TIMEOUT (default: 5m)
          Timeout per job. Jobs may take longer to complete under higher
          concurrency limits.

      --output string-array, $CODER_SCALETEST_OUTPUTS (default: text)
          Output format specs in the format "<format>[:<path>]". Not specifying
          a path will default to stdout. Available formats: text, json.

      --scaletest-prometheus-address string, $CODER_SCALETEST_PROMETHEUS_ADDRESS (default: 0.0.0.0:21112)
          Address on which to expose scaletest Prometheus metrics.

      --scaletest-prometheus-wait duration, $CODER_SCALETEST_PROMETHEUS_WAIT (default: 5s)
          How long to wait before exiting in order to allow Prometheus metrics
          to be scraped.

      --tick-interval duration, $CODER_SCALETEST_WORKSPACE_TRAFFIC_TICK_INTERVAL (default: 100ms)
          How often to send traffic.

      --timeout duration, $CODER_SCALETEST_TIMEOUT (default: 30m)
          Timeout for the entire test run. 0 means unlimited.

      --trace bool, $CODER_SCALETEST_TRACE
          Whether application tracing data is collected. It exports to a backend
          configured by environment variables. See:
          https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md.

      --trace-coder bool, $CODER_SCALETEST_TRACE_CODER
          Whether opentelemetry traces are sent to Coder. We recommend keeping
          this disabled unless we advise you to enable it.

      --trace-honeycomb-api-key string, $CODER_SCALETEST_TRACE_HONEYCOMB_API_KEY
          Enables trace exporting to Honeycomb.io using the provided API key.

      --trace-propagate bool, $CODER_SCALETEST_TRACE_PROPAGATE
          Enables trace propagation to the Coder backend, which will be used to
          correlate server-side spans with client-side spans. Only enable this
          if the server is configured with the exact same tracing configuration
          as the client.

---
Run `coder --help` for a list of global options.
