# Simple nginx configuration to serve PostgreSQL binaries
# Mimics Maven repository structure for embedded-postgres

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Logging
    access_log /dev/stdout;
    error_log /dev/stderr;

    # Gzip compression for text files
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    server {
        listen 8080;
        server_name _;
        
        # Root directory where binaries are stored
        root /usr/share/nginx/html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Serve PostgreSQL binaries with appropriate MIME types
        location ~* \.jar$ {
            add_header Content-Type application/java-archive;
            add_header Cache-Control "public, max-age=31536000"; # Cache for 1 year
        }

        location ~* \.sha256$ {
            add_header Content-Type text/plain;
            add_header Cache-Control "public, max-age=31536000"; # Cache for 1 year
        }

        # Maven repository directory listings (optional, helps with debugging)
        location / {
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            
            # CORS headers for cross-origin requests
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Range" always;
        }

        # Security: deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}