package usage

import (
	"context"

	"github.com/coder/coder/v2/coderd/database"
)

// Inserter accepts usage events generated by the product.
type Inserter interface {
	// InsertDiscreteUsageEvent writes a discrete usage event to the database
	// within the given transaction.
	InsertDiscreteUsageEvent(ctx context.Context, tx database.Store, event DiscreteEvent) error
}

// AGPLInserter is a no-op implementation of Inserter.
type AGPLInserter struct{}

var _ Inserter = AGPLInserter{}

func NewAGPLInserter() Inserter {
	return AGPLInserter{}
}

// InsertDiscreteUsageEvent is a no-op implementation of
// InsertDiscreteUsageEvent.
func (AGPLInserter) InsertDiscreteUsageEvent(_ context.Context, _ database.Store, _ DiscreteEvent) error {
	return nil
}
