{
	"cSpell.words": [
		"afero",
		"agentsdk",
		"apps",
		"ASKPASS",
		"authcheck",
		"autostop",
		"autoupdate",
		"awsidentity",
		"bodyclose",
		"buildinfo",
		"buildname",
		"Caddyfile",
		"circbuf",
		"cliflag",
		"cliui",
		"codecov",
		"codercom",
		"coderd",
		"coderdenttest",
		"coderdtest",
		"codersdk",
		"contravariance",
		"cronstrue",
		"databasefake",
		"dbcrypt",
		"dbgen",
		"dbmem",
		"dbtype",
		"DERP",
		"derphttp",
		"derpmap",
		"devcontainers",
		"devel",
		"devtunnel",
		"dflags",
		"dogfood",
		"dotfiles",
		"drpc",
		"drpcconn",
		"drpcmux",
		"drpcserver",
		"Dsts",
		"embeddedpostgres",
		"enablements",
		"enterprisemeta",
		"Entra",
		"errgroup",
		"eventsourcemock",
		"externalauth",
		"Failf",
		"fatih",
		"filebrowser",
		"Formik",
		"gitauth",
		"Gitea",
		"gitsshkey",
		"goarch",
		"gographviz",
		"goleak",
		"gonet",
		"googleclouddns",
		"gossh",
		"gsyslog",
		"GTTY",
		"hashicorp",
		"hclsyntax",
		"httpapi",
		"httpmw",
		"idtoken",
		"Iflag",
		"incpatch",
		"initialisms",
		"ipnstate",
		"isatty",
		"jetbrains",
		"Jobf",
		"Keygen",
		"kirsle",
		"knowledgebase",
		"Kubernetes",
		"ldflags",
		"magicsock",
		"manifoldco",
		"mapstructure",
		"mattn",
		"mitchellh",
		"moby",
		"namesgenerator",
		"namespacing",
		"netaddr",
		"netcheck",
		"netip",
		"netmap",
		"netns",
		"netstack",
		"nettype",
		"nfpms",
		"nhooyr",
		"nmcfg",
		"nolint",
		"nosec",
		"ntqry",
		"OIDC",
		"oneof",
		"opty",
		"paralleltest",
		"parameterscopeid",
		"portsharing",
		"pqtype",
		"prometheusmetrics",
		"promhttp",
		"protobuf",
		"provisionerd",
		"provisionerdserver",
		"provisionersdk",
		"psql",
		"ptrace",
		"ptty",
		"ptys",
		"ptytest",
		"quickstart",
		"reconfig",
		"replicasync",
		"retrier",
		"rpty",
		"SCIM",
		"sdkproto",
		"sdktrace",
		"Signup",
		"slogtest",
		"sourcemapped",
		"speedtest",
		"spinbutton",
		"Srcs",
		"stdbuf",
		"stretchr",
		"STTY",
		"stuntest",
		"subpage",
		"tailbroker",
		"tailcfg",
		"tailexchange",
		"tailnet",
		"tailnettest",
		"Tailscale",
		"tanstack",
		"tbody",
		"TCGETS",
		"tcpip",
		"TCSETS",
		"templateversions",
		"testdata",
		"testid",
		"testutil",
		"tfexec",
		"tfjson",
		"tfplan",
		"tfstate",
		"thead",
		"tios",
		"tmpdir",
		"tokenconfig",
		"Topbar",
		"tparallel",
		"trialer",
		"trimprefix",
		"tsdial",
		"tslogger",
		"tstun",
		"turnconn",
		"typegen",
		"typesafe",
		"unauthenticate",
		"unconvert",
		"untar",
		"userspace",
		"VMID",
		"walkthrough",
		"weblinks",
		"webrtc",
		"websockets",
		"wgcfg",
		"wgconfig",
		"wgengine",
		"wgmonitor",
		"wgnet",
		"workspaceagent",
		"workspaceagents",
		"workspaceapp",
		"workspaceapps",
		"workspacebuilds",
		"workspacename",
		"workspaceproxies",
		"wsjson",
		"xerrors",
		"xlarge",
		"xsmall",
		"yamux"
	],
	"cSpell.ignorePaths": ["site/package.json", ".vscode/settings.json"],
	"emeraldwalk.runonsave": {
		"commands": [
			{
				"match": "database/queries/*.sql",
				"cmd": "make gen"
			},
			{
				"match": "provisionerd/proto/provisionerd.proto",
				"cmd": "make provisionerd/proto/provisionerd.pb.go"
			}
		]
	},
	"search.exclude": {
		"**.pb.go": true,
		"**/*.gen.json": true,
		"**/testdata/*": true,
		"coderd/apidoc/**": true,
		"docs/reference/api/*.md": true,
		"docs/reference/cli/*.md": true,
		"docs/templates/*.md": true,
		"LICENSE": true,
		"scripts/metricsdocgen/metrics": true,
		"site/out/**": true,
		"site/storybook-static/**": true,
		"**.map": true,
		"pnpm-lock.yaml": true
	},
	// Ensure files always have a newline.
	"files.insertFinalNewline": true,
	"go.lintTool": "golangci-lint",
	"go.lintFlags": ["--fast"],
	"go.coverageDecorator": {
		"type": "gutter",
		"coveredGutterStyle": "blockgreen",
		"uncoveredGutterStyle": "blockred"
	},
	// The codersdk is used by coderd another other packages extensively.
	// To reduce redundancy in tests, it's covered by other packages.
	// Since package coverage pairing can't be defined, all packages cover
	// all other packages.
	"go.testFlags": ["-short", "-coverpkg=./..."],
	// We often use a version of TypeScript that's ahead of the version shipped
	// with VS Code.
	"typescript.tsdk": "./site/node_modules/typescript/lib",
	// Playwright tests in VSCode will open a browser to live "view" the test.
	"playwright.reuseBrowser": true,

	"[javascript][javascriptreact][json][jsonc][typescript][typescriptreact]": {
		"editor.defaultFormatter": "biomejs.biome"
		// "editor.codeActionsOnSave": {
		//   "source.organizeImports.biome": "explicit"
		// }
	},

	"[css][html][markdown][yaml]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	}
}
