# .github/workflows/deploy.yml
name: Deploy PR
on:
  deployment:
  # pull_request:
  #   types: [opened, synchronize, ready_for_review]
  #   types: ready_for_review
  workflow_dispatch:
  push:
    branches-ignore: main

env:
  # This is the version of the release. It is used to tag the Docker images.
  CODER_BASE_IMAGE_TAG: ghcr.io/coder/coder-preview-base:pr${{ github.event.pull_request.number }}
  CODER_IMAGE_TAG: ghcr.io/coder/coder-preview:pr${{ github.event.pull_request.number }}
  VERSION: ${{ github.event.pull_request.number }}

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Necessary for Docker manifest
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: GHCR Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create empty base-build-context directory
        run: mkdir base-build-context

      - name: Build base Docker image
        uses: docker/build-push-action@v4
        with:
          context: base-build-context
          file: scripts/Dockerfile.base
          platforms: linux/amd64
          push: true
          tags: ${{ env.CODER_BASE_IMAGE_TAG }}

      - name: Build Linux amd64 Docker image
        run: |
          set -euxo pipefail
          make -j build/coder_linux_amd64
          ./build_docker.sh --arch amd64 --version ${{env.VERSION}} --target ${{env.CODER_IMAGE_TAG }} --push build/coder_linux_amd64
        #
        env:
          CODER_BASE_IMAGE_TAG: ${{ env.CODER_BASE_IMAGE_TAG }}
          VERSION: ${{ env.VERSION }}

  deployment:
    needs: build
    if: needs.build.result == 'success'
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3

      - name: "Create PR namespace"
        run: |
          set -euxo pipefail
          kubectl create namespace "pr${{ env.PR_NUMBER }}" --kubeconfig "${{ secrets.DELIVERYBOT_KUBECONFIG }}"

      - name: "Deploy"
        uses: "deliverybot/helm@v1"
        with:
          release: "pr${{ env.PR_NUMBER }}"
          namespace: "pr${{ env.PR_NUMBER  }}"
          version: "{{ github.sha }}"
          chart: "./helm"
          token: "${{ secrets.GITHUB_TOKEN }}"
          values: |
            name: foobar
        env:
          KUBECONFIG_FILE: "${{ secrets.DELIVERYBOT_KUBECONFIG }}"
