name: 'Multi-arch Docker Image Attestation'
description: 'Create GitHub attestation for a multi-arch Docker image using SLSA provenance'

inputs:
  image-name:
    description: 'Full image name including registry and tag (e.g., ghcr.io/coder/coder-preview:main)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Get manifest digest
      id: get_digest
      shell: bash
      run: |
        set -euo pipefail
        
        # Get the manifest list (index) for our multi-arch image
        manifest_list=$(docker buildx imagetools inspect --raw ${{ inputs.image-name }})
        
        # Verify that we have all three architectures
        echo "Checking architectures in manifest..."
        if ! echo "$manifest_list" | jq -e '.manifests | any(.platform.architecture == "amd64" and .platform.os == "linux")' > /dev/null; then
          echo "Error: Missing linux/amd64 manifest" >&2
          exit 1
        fi
        if ! echo "$manifest_list" | jq -e '.manifests | any(.platform.architecture == "arm64" and .platform.os == "linux")' > /dev/null; then
          echo "Error: Missing linux/arm64 manifest" >&2
          exit 1
        fi
        if ! echo "$manifest_list" | jq -e '.manifests | any(.platform.architecture == "arm" and .platform.os == "linux" and .platform.variant == "v7")' > /dev/null; then
          echo "Error: Missing linux/arm/v7 manifest" >&2
          exit 1
        fi
        
        # Get the manifest list digest - this represents the multi-arch image
        # The digest is calculated from the canonicalized JSON
        DIGEST=$(echo "$manifest_list" | jq -Sc '.' | sha256sum | cut -d' ' -f1)
        DIGEST="sha256:$DIGEST"
        
        echo "digest=$DIGEST" >> $GITHUB_OUTPUT
        echo "Found multi-arch manifest list digest: $DIGEST"
    
    - name: GitHub Attestation
      uses: actions/attest@a63cfcc7d1aab266ee064c58250cfc2c7d07bc31 # v2.2.1
      with:
        subject-name: ${{ inputs.image-name }}
        subject-digest: ${{ steps.get_digest.outputs.digest }}
        predicate-type: "https://slsa.dev/provenance/v1"
        predicate: |
          {
            "buildType": "https://github.com/actions/runner-images/",
            "builder": {
              "id": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            },
            "invocation": {
              "configSource": {
                "uri": "git+https://github.com/${{ github.repository }}@${{ github.ref }}",
                "digest": {
                  "sha1": "${{ github.sha }}"
                },
                "entryPoint": ".github/workflows/${{ github.workflow }}"
              },
              "environment": {
                "github_workflow": "${{ github.workflow }}",
                "github_run_id": "${{ github.run_id }}"
              }
            },
            "metadata": {
              "buildInvocationID": "${{ github.run_id }}",
              "completeness": {
                "environment": true,
                "materials": true
              }
            }
          }
        push-to-registry: true