---
# Source: coder-provisioner/templates/coder.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: other-coder-provisioner
    app.kubernetes.io/part-of: other-coder-provisioner
    app.kubernetes.io/version: 0.1.0
    helm.sh/chart: coder-provisioner-0.1.0
  name: other-coder-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: other-coder-provisioner
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: other-coder-provisioner
        app.kubernetes.io/part-of: other-coder-provisioner
        app.kubernetes.io/version: 0.1.0
        helm.sh/chart: coder-provisioner-0.1.0
    spec:
      containers:
      - args:
        - provisionerd
        - start
        command:
        - /opt/coder
        env:
        - name: CODER_PROMETHEUS_ADDRESS
          value: 0.0.0.0:2112
        - name: CODER_PROVISIONER_DAEMON_PSK
          valueFrom:
            secretKeyRef:
              key: psk
              name: coder-provisioner-psk
        - name: CODER_URL
          value: http://coder.default.svc.cluster.local
        image: ghcr.io/coder/coder:latest
        imagePullPolicy: IfNotPresent
        lifecycle: {}
        name: coder
        ports: null
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: null
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts: []
      restartPolicy: Always
      serviceAccountName: existing-coder-provisioner-serviceaccount
      terminationGracePeriodSeconds: 600
      volumes: []
